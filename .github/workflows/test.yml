name: Testing workflow
on:
  push:
run-name: "Apps: foo"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-scripts:
    name: Build test scripts
    runs-on: ubuntu-latest
    outputs:
      scripts: ${{ steps.build-test-scripts.outputs.scripts }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: build-test-scripts
        uses: ./.github/actions/build-test-scripts
        with:
          prefix: foo
  test:
    needs: build-test-scripts
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        scripts: ${{ fromJson(needs.build-test-scripts.outputs.scripts) }}
    name: ${{ matrix.scripts.name  }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install
      - name: Test
        run: ${{ matrix.scripts.command }}
      - name: Upload coverage artifact
        if: success() && matrix.scripts.coveragePath != ''
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ matrix.scripts.name }}
          path: apps/foo/${{ matrix.scripts.coveragePath }}
