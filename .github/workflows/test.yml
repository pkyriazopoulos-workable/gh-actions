name: Testing workflow
on:
  pull_request:
  workflow_dispatch:
    inputs:
      apps:
        description: Apps to test
        required: true
        default: foo, bar
run-name: "Apps: ${{ github.event.inputs.apps }}"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.inputs.apps }}
  cancel-in-progress: true

jobs:
  # We need to format the string of apps first, so we can use/reference
  # the variable in the matrix strategy in the "test" job.
  format-apps-string:
    name: Format apps string
    runs-on: ubuntu-latest
    outputs:
      APPS: ${{ steps.format-apps-string.outputs.FORMATTED_STRING }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: format-apps-string
        uses: ./.github/actions/format-string-to-json-string
        with:
          string: ${{ github.event.inputs.apps }}
          separator: ','
  test:
    needs: format-apps-string
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        app: ${{ fromJson(needs.format-apps-string.outputs.APPS) }}
    name: "Testing app: ${{ matrix.app }}"
    steps:
      - name: Get code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install
      - name: Test
        run: pnpm -F ${{ matrix.app }} run test:ci
